@page "/admin/orders"
@inherits OwningComponentBase<IOrderRepository>


<OrderTable TableTitle="Neposlate porudzbine"
        Orders="UnshippedOrders" ButtonLabel="Posalji" OrderSelected="ShipOrder" />
<OrderTable TableTitle="Poslate porudzbine"
        Orders="ShippedOrders" ButtonLabel="Resetuj" OrderSelected="ResetOrder" />
<button class="btn btn-success" @onclick="@(e => UpdateData())">Osvezi podatke</button>


@code 
{
    public IOrderRepository Repository => Service;


    public IEnumerable<Order> AllOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> UnshippedOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> ShippedOrders { get; set; } = Enumerable.Empty<Order>();
    
    protected async override Task OnInitializedAsync() 
    {
        await UpdateData();
    }


    public async Task UpdateData() 
    {
        AllOrders = await Repository.Orders.ToListAsync();
        UnshippedOrders = AllOrders.Where(o => !o.Shipped);
        ShippedOrders = AllOrders.Where(o => o.Shipped);
    }


    public void ShipOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);


    private void UpdateOrder(int id, bool shipValue) 
    {
        Order? o = Repository.Orders.FirstOrDefault(o => o.OrderID == id);
        if (o != null) 
        {
            o.Shipped = shipValue;
            Repository.SaveOrder(o);
        }
    }
}
